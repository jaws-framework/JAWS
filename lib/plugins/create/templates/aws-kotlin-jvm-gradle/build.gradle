apply plugin: 'java'
apply plugin: 'maven'

group = 'com.example.conversion'
version = 'dev'

description = """converter"""


sourceCompatibility = 1.5
targetCompatibility = 1.5
tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

buildscript {
  repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.1.51"
    classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
    classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    classpath "de.sebastianboegl.gradle.plugins:shadow-log4j-transformer:2.1.1"
  }
}

plugins {
  id "de.undercouch.download" version "3.4.3"
  id "com.moowork.node" version "1.2.0"
}


apply plugin: 'kotlin'
apply plugin: "io.spring.dependency-management"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "de.sebastianboegl.shadow.transformer.log4j"

repositories {
  maven { url "http://repo.maven.apache.org/maven2" }
}

// If requiring AWS JDK, uncomment the dependencyManagement to use the bill of materials
//   https://aws.amazon.com/blogs/developer/managing-dependencies-with-aws-sdk-for-java-bill-of-materials-module-bom/
//dependencyManagement {
//    imports {
//        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.206'
//    }
//}

dependencies {
  compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.1.51'
  compile group: 'com.amazonaws', name: 'aws-lambda-java-log4j2', version:'1.0.0'
  compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.323'
  compile group: 'com.amazonaws', name: 'aws-lambda-java-core', version:'1.1.0'
  compile group: 'com.amazonaws', name: 'aws-lambda-java-events', version:'2.0.1'
  compile group: 'net.bramp.ffmpeg', name: 'ffmpeg', version: '0.6.2'
}


node {
  version = '8.11.1'
}

task ffmpegDownload(type: Download) {
  src([
      "https://example.com/ffmpeg",
      "https://example.com/ffprobe"
  ])
  dest "src/main/resources"
  onlyIfModified true
}

task ffmpegMakeExecutable(type: Exec) {
  commandLine "chmod", "-R", "u+x", "src/main/resources"
}

task addServerless(type: YarnTask) {
  args = ['add', 'serverless']
}

task deploy(type: NodeTask, dependsOn: 'shadowJar') {
  script = file('node_modules/.bin/serverless')
  args = ['deploy']
}

ffmpegMakeExecutable.dependsOn(ffmpegDownload)
deploy.dependsOn(ffmpegMakeExecutable)
deploy.dependsOn(addServerless)
